---
name: unittest
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - "*"

permissions:
  contents: read

jobs:
  go:
    name: go
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Install dependencies
        run: |
          go get .
      - name: Build
        run: make build
      - name: Run Go tests
        run: make test
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
      - uses: jwalton/gh-find-current-pr@v1
        id: finder
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ steps.finder.outputs.pr }}
          path: code-coverage-results.md
          recreate: true
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary
          path: postgresql-partition-manager
          if-no-files-found: error
          retention-days: 1

  e2e:
    name: End-to-end
    needs: go
    strategy:
      matrix:
        postgres:
          - postgres:14
          - postgres:15
          - postgres:16
    runs-on: ubuntu-latest
    env:
      BATS_LIB_PATH: "${{ github.workspace }}/test/bats/lib/"
      PGHOST: localhost
      PGUSER: postgres
      PGPASSWORD: hackme
      PGDATABASE: unittest
    services:
      postgres:
        image: ${{ matrix.postgres }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --hostname postgres
        env:
          POSTGRES_PASSWORD: hackme
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Bats and bats libs
        uses: bats-core/bats-action@2.0.0
        with:
          support-path: ${{ github.workspace }}/test/bats/lib/bats-support
          assert-path: ${{ github.workspace }}/test/bats/lib/bats-assert
          file-install: false # Unused
          detik-install: false # Unused

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: binary

      # File permissions are not maintained during artifact upload/download
      - name: Move binary to local executable
        run: mv postgresql-partition-manager /usr/local/bin && chmod +x /usr/local/bin/postgresql-partition-manager

      - name: Run bats
        run: make bats-test
